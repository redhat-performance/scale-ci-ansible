---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - golang
    - gcc
    - git
    - golang-bin
    - gcc-c++
    - python-pip

- name: Install awscli
  pip:
    name: awscli

- name: create gopath dir
  file:
    path: "{{ GOPATH | default('/root/.go') }}"
    state: directory

- name: create .aws dir
  file:
    path: "{{ ansible_env.HOME }}/.aws"
    state: directory

- name: aws config
  template:
     src: config.j2
     dest: "{{ ansible_env.HOME }}/.aws/config"

- name: aws credentials
  template:
     src: credentials.j2
     dest: "{{ ansible_env.HOME }}/.aws/credentials"

- name: set workdir
  set_fact:
    workdir: "{{ GOPATH }}/src/github.com/openshift/installer"

- name: cleanup installer code if it exists
  file:
    path: "{{ workdir }}"
    state: absent

- block:
    - name: get the installer bits
      git:
        repo: 'https://github.com/openshift/installer.git'
        dest: "{{ workdir }}"
        version: "{{ OPENSHIFT_INSTALL_INSTALLER_VERSION }}"

    - name: build installer binary
      shell: cd {{ workdir }}; hack/build.sh
      environment:
        GOPATH: "{{ GOPATH }}"
  when: OPENSHIFT_INSTALL_USE_GIT_INSTALLER | default(False)

- block:
    - name: create workdir
      file:
        path: "{{ workdir }}/bin"
        state: directory

    - name: setup config to talk to registry
      template:
        src: registry_auth.j2
        dest: "{{ workdir }}/bin/config.json"

    - name: extract openshift-install binary from the payload
      shell: |
        set -o pipefail
        cd {{ workdir }}/bin
        oc adm release extract --tools {{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }}
        ls *.tar.gz | xargs -I % sh -c 'tar -xvf %'
        chmod +x openshift-install
  when: not OPENSHIFT_INSTALL_USE_GIT_INSTALLER | default(False)

- name: create openshift install log dir
  file:
    path: "{{ OPENSHIFT_INSTALL_LOG_DIR }}"
    state: directory

- block:
    - name: download the image
      get_url:
        url: "{{ OPENSHIFT_IMAGE_URL }}"
        dest: /root/rhcos-qemu.qcow2.gz

    - name: run openshift installer on libvirt
      shell: "cd {{ workdir }}; OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }} _OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }} bin/openshift-install create cluster --log-level=debug 2>&1 | tee -a {{ OPENSHIFT_INSTALL_LOG_DIR }}/install.log"
      when: (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE is defined) and (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE != "")

    - name: run openshift installer on libvirt
      shell: "cd {{ workdir }}; bin/openshift-install create cluster --log-level=debug 2>&1 | tee -a {{ OPENSHIFT_INSTALL_LOG_DIR }}/install.log"
      when: (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE is undefined) or (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE == "")
  when: OPENSHIFT_INSTALL_PLATFORM == "libvirt"

- block:
    - name: setup install-config
      template:
        src: install-config.yaml.j2
        dest: "{{ workdir }}/install-config.yaml"
    - name: ignition configs
      shell: "cd {{ workdir }}; OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }} _OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }} bin/openshift-install create ignition-configs"
      when: (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE is defined) and (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE != "")

    - name: ignition configs
      shell: "cd {{ workdir }}; bin/openshift-install create ignition-configs"
      when: (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE is undefined) or (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE == "")

    - name: set the user in ignition configs
      replace:
        path: "{{ item }}"
        regexp: "core"
        replace: "{{ OPENSHIFT_INSTALL_USER }}"
      with_items:
        - "{{ workdir }}/bootstrap.ign"
        - "{{ workdir }}/master.ign"
        - "{{ workdir }}/worker.ign"

    - name: run openshift installer on aws using the image override
      shell: |
        set -o pipefail
        cd {{ workdir }}
        export OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }}
        export _OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE }}
        bin/openshift-install create cluster --log-level=debug
      when: (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE is defined) and (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE != "")

    - name: run openshift installer on aws using the default release image
      shell: |
        set -o pipefail
        cd {{ workdir }}
        bin/openshift-install create cluster --log-level=debug
      when: (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE is undefined) or (OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE == "")

    - name: copy the install log
      copy:
        src: "{{ workdir }}/.openshift_install.log"
        dest: "{{ OPENSHIFT_INSTALL_LOG_DIR }}/openshift_install.log"
        remote_src: true

    - name: sleep for sometime for the cluster to settle
      pause:
        minutes: 3
  when: OPENSHIFT_INSTALL_PLATFORM == "aws"
